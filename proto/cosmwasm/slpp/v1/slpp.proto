syntax = "proto3";
package cosmwasm.slpp.v1;

import "google/api/annotations.proto";

option go_package = "github.com/CosmWasm/wasmd/x/slpp/types";

service Msg {
    rpc RegisterAVS(MsgRegisterAVS) returns (MsgRegisterAVSResponse) {}
}

// AVS represents the state-ful information stored per AVS
message AVS {
  bytes contract_bin = 1;
	uint64 id = 2;
	string sidecar_docker_image = 3;
}

// MsgRegisterAVS defines a message-type handled by the x/slpp module for ingressing a new AVS.
message MsgRegisterAVS {
	bytes contract_bin = 1;
	string sidecar_docker_image = 2;
}

// MsgRegisterAVSResponse defines the Msg/RegisterAVS response
message MsgRegisterAVSResponse {
  uint64 id = 1;
}

// Query is the query service for the x/slpp module.
service Query {
  rpc GetAVS(GetAVSRequest) returns (GetAVSResponse) {
    option (google.api.http).get = "/slpp/v1/get_avs";
  }
}

message GetAVSRequest {
  uint64 id = 1;
}

message GetAVSResponse {
  AVS avs = 1;
}
